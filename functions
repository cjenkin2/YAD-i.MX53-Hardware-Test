#!/bin/bash

# buttons
CANCEL_BTN="1"
CLOSE_BTN="252"
OK_BTN="0"

DEFAULT_TITLE="Genesi i.MX53 Hardware Tests"

MAIN_MENU="--title=${DEFAULT_TITLE} --list --print-column=2 --column=icon:IMG --column=Test --column=Status --column=@fore@"
FEEDBACK_MENU="--list --column=:RD --column=Status --column=Action:HD"

# general functions

txtmenu_from_file()
{
	local file=${1}
	local title=${2}

	if [ -z "${title}" ]
	then
		title="${DEFAULT_TITLE}"
	fi

	yad --title="${title}" --text="$(cat ${file})"
}

ask_continue()
{
	local btn=$? # TODO UGLY!

	if close_menu ${btn}
	then
		exit 0
	fi
}

if_failure()
{
	local stat=${1}

	if [ ${stat} = "Failure" ]
	then
		yad --text="The previous test ended in failure. Would you like to continue?"
		return $?
	else
		return 0
	fi
}

progress_view()
{
	local ttime=${1}
	local title=${2}
	local text=${3}

	if [ -z "${title}" ]
	then
		title="${DEFAULT_TITLE}"
	fi
	
	if [ -z "${text}" ]
	then
		text="Test in progress. Please wait."
	fi

	for i in $(seq 1 $ttime)
	do
		sleep 1
		echo "100*${i}/${ttime}" | bc -l
	done | yad --title="${title}" --progress --auto-close --text="${text}"

}

continue_after_failure()
{
	local stat=${1}
	local res=0

	if [ ${stat} = "Failure" ]
	then
	    res=$(yad --text="The previoius test ended in failure. Would you like to continue?")
	fi

	return ${res}
}

# TODO not linked with the structure of FEEDBACK_MENU at all!
get_feedback_status()
{
	local result="${1}"

	echo $($(echo "${result}" | cut -d "|" -f3))
}

current_status()
{
	oldStat=${1}
	newStat=${2}

	if [ -z "${oldStat}" ]
	then
		echo ${newStat}
	elif [[ "$oldStat" = $newStat  ]]
	then
		echo $oldStat
	else
		echo "Mixed"
	fi
}

close_menu()
{
	btn=${1}

	if [ ${btn} -eq ${OK_BTN} ]
	then
		return 1
	else
		return 0
	fi
}

mk_menu_body()
{
	local file=${1}
	local process=${2}

	if [ -z "${process}" ]
	then
		process="echo"
	fi

	local accum_body=""
	local tmp=""

	while read line
	do
		tmp=$(${process} ${line})
		accum_body="${accum_body} ${tmp}"
	done < ${file}

	echo ${accum_body}
}

# main menu functions
config_main_menu_item()
{
	local hwtest=${1}
	local status=${2}
	local icon=""
	local color=""

	case ${status} in
		Incomplete)
			color="black"
			icon="none"
			;;
		Failure)
			color="red"
			icon="failure.png"
			;;
		Success)
			color="green"
			icon="success.png"
			;;
		Mixed)
			color="orange"
			icon="mixed.png"
			;;
		*)
			color="purple"
			icon="none"
			;;
	esac

	echo ${icon} ${hwtest} ${status} ${color}
}

update_test_status()
{
	local testName=${1}
	local status=${2}
	local fileName=${3}

	if [ -z "${status}" ]
	then
		exit 0
	fi

	echo ${testName}

	while read line
	do
		if [[ $line == ${testName}* ]]
		then
			echo "${testName} ${status}" >> tmp_menu_file
		else
			echo "${line}" >> tmp_menu_file
		fi
	done < ${fileName}

	mv tmp_menu_file ${fileName}
}

parse_item()
{
	echo ${1} | cut -d"|" -f1
}
