#!/bin/bash

. ../functions

GPU_TEST_TIME=10

gpu_feedback_menu()
{
	local stage=${1}

	log "After running stage ${stage}"

	log_default_feedback gpu_feedback.menu
}

gpu_none()
{
	echo "Failure"
}

gpu_problem()
{
	echo "Failure"
}

gpu_good()
{
	echo "Success"
}

run_gpu_test()
{
	local ttest="${1}"

	progress_view_dummy ${GPU_TEST_TIME} "" "" --auto-close &
	timeout ${GPU_TEST_TIME} "${ttest}" > /dev/null 2>&1
}

ask_continue $(txtmenu_from_file GPU_pg1.txt)
ask_continue $(txtmenu_from_file GPU_pg2.txt)

#dpkg -L libopenvg1-imx-demos
OPENVG1_TESTS="tiger tiger_ri"

for ttest in ${OPENVG1_TESTS}
do
	run_gpu_test "${ttest}"
done

#TODO make sure the user picks a choice
result=$(gpu_feedback_menu "openvg1")
stat=$(current_status "" $(get_feedback_status "${result}") )

ask_continue $(if_failure ${stat})
ask_continue $(txtmenu_from_file GPU_pg3.txt)

GLES1_TESTS="es11ex"

for ttest in ${GLES1_TESTS}
do
	run_gpu_test "${ttest}"
done

#TODO make sure the user picks a choice
result=$(gpu_feedback_menu "gles1")
stat=$(current_status ${stat} $(get_feedback_status "${result}") )

ask_continue $(if_failure ${stat})
ask_continue $(txtmenu_from_file GPU_pg4.txt)

GLES2_TESTS="./torusknot simple_draw"

for ttest in ${GLES2_TESTS}
do
	run_gpu_test "${ttest}"
done

#TODO make sure the user picks a choice
result=$(gpu_feedback_menu "gles2")
stat=$(current_status ${stat} $(get_feedback_status "${result}") )

echo ${stat}
